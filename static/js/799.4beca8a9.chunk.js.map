{"version":3,"file":"static/js/799.4beca8a9.chunk.js","mappings":"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","sources":["components/UpdateContactForm/UpdateContactForm.styled.jsx","components/UpdateContactForm/UpdateContactForm.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  border: ${p => p.theme.borders.fat};\n  border-radius: ${p => p.theme.space[3]};\n  margin-bottom: ${p => p.theme.space[4]};\n  width: ${p => p.theme.space[9]};\n  padding: ${p => p.theme.space[3]};\n  background-color: ${p => p.theme.colors.white};\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: ${p => p.theme.fontSizes.m};\n`;\nexport const Input = styled.input`\n  width: ${p => p.theme.space[8]};\n  margin-bottom: ${p => p.theme.space[3]};\n  border: ${p => p.theme.borders.normal};\n  border-radius: ${p => p.theme.space[5]};\n  padding: ${p => p.theme.space[2]} ${p => p.theme.space[3]};\n  font-size: ${p => p.theme.fontSizes.s};\n`;\nexport const Button = styled.button`\n  text-decoration: none;\n  display: inline-block;\n  width: ${p => p.theme.space[7]};\n  height: 40px;\n  line-height: ${p => p.theme.space[4]};\n  border: ${p => p.theme.borders.fat};\n  border-radius: ${p => p.theme.space[5]};\n  font-size: 11px;\n  text-transform: uppercase;\n  text-align: center;\n  letter-spacing: ${p => p.theme.space[2]};\n  font-weight: ${p => p.theme.fontWeights.semiBold};\n  color: ${p => p.theme.colors.black};\n  background: ${p => p.theme.colors.white};\n  transition: 0.3s;\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    background: ${p => p.theme.colors.green};\n  }\n`;\n","import { Form, Label, Input, Button } from './UpdateContactForm.styled';\nimport { useUpdateContactMutation } from 'redux/contactsSlice';\nimport { useState } from 'react';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport PropTypes from 'prop-types';\n\nexport default function UpdateContactForm({ onClose, name, number, id }) {\n  const [updateContact] = useUpdateContactMutation();\n  const [nameValue, setNameValue] = useState(name);\n  const [numberValue, setNumberValue] = useState(number);\n\n  const handlerSubmit = e => {\n    e.preventDefault();\n    const contact = {\n      id,\n      contact: { name: nameValue, number: numberValue },\n    };\n    e.target.reset();\n    updateContact(contact);\n    Notify.success('Change contact success!', {\n      timeout: 3000,\n      distance: '100px',\n    });\n    onClose();\n  };\n\n  return (\n    <Form autoComplete=\"off\" onSubmit={handlerSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={nameValue}\n          onChange={e => {\n            setNameValue(e.target.value);\n          }}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"phone\"\n          value={numberValue}\n          onChange={e => {\n            setNumberValue(e.target.value);\n          }}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Change contact</Button>\n    </Form>\n  );\n}\n\nUpdateContactForm.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n"],"names":["Form","styled","p","theme","borders","fat","space","colors","white","Label","fontSizes","m","Input","normal","s","Button","fontWeights","semiBold","black","green","UpdateContactForm","onClose","name","number","id","useUpdateContactMutation","updateContact","useState","nameValue","setNameValue","numberValue","setNumberValue","autoComplete","onSubmit","e","preventDefault","contact","target","reset","Notify","timeout","distance","type","value","onChange","pattern","title","required"],"sourceRoot":""}
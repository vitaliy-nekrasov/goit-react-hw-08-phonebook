{"version":3,"file":"static/js/67.dbe0f383.chunk.js","mappings":"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","sources":["pages/ContactList/ContactList.styled.jsx","pages/ContactList/ContactList.jsx","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ol`\n  margin-left: ${p => p.theme.space[4]};\n`;\nexport const Item = styled.li`\n  font-size: ${p => p.theme.fontSizes.s};\n  margin-bottom: ${p => p.theme.space[2]};\n`;\nexport const Text = styled.p`\n  display: inline-flex;\n  margin-right: ${p => p.theme.space[3]};\n`;\nexport const Button = styled.button`\n  text-decoration: none;\n  display: inline-block;\n  padding: ${p => p.theme.space[2]} ${p => p.theme.space[3]};\n  line-height: ${p => p.theme.space[4]};\n  border: ${p => p.theme.borders.normal};\n  border-radius: ${p => p.theme.space[5]};\n  font-size: 11px;\n  text-transform: uppercase;\n  text-align: center;\n  letter-spacing: ${p => p.theme.space[2]};\n  font-weight: ${p => p.theme.fontWeights.semiBold};\n  color: ${p => p.theme.colors.black};\n  background: ${p => p.theme.colors.white};\n  transition: 0.3s;\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    background: ${({ children, theme }) => {\n      switch (children) {\n        case 'Delete': {\n          return theme.colors.red;\n        }\n        case 'Change contact': {\n          return theme.colors.yellow;\n        }\n        default:\n          return theme.colors.white;\n      }\n    }};\n  }\n  &:not(:last-child) {\n    margin-right: ${p => p.theme.space[3]};\n  }\n`;\n\nexport const AddButton = styled.button`\n  margin-bottom: ${p => p.theme.space[4]};\n  text-decoration: none;\n  display: inline-block;\n  padding: ${p => p.theme.space[3]} ${p => p.theme.space[4]};\n  line-height: ${p => p.theme.space[4]};\n  border: ${p => p.theme.borders.normal};\n  border-radius: ${p => p.theme.space[5]};\n  font-size: 14px;\n  text-transform: uppercase;\n  text-align: center;\n  letter-spacing: ${p => p.theme.space[2]};\n  font-weight: ${p => p.theme.fontWeights.semiBold};\n  color: ${p => p.theme.colors.black};\n  background: ${p => p.theme.colors.white};\n  transition: 0.3s;\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    background: ${p => p.theme.colors.green};\n  }\n`;\n","import { List, Item, Text, Button, AddButton } from './ContactList.styled';\nimport { useState, lazy, Suspense } from 'react';\nimport { selectFilterValue } from 'redux/selectors';\nimport { useSelector } from 'react-redux';\nimport {\n  useGetContactsQuery,\n  useDeleteContactMutation,\n} from 'redux/contactsSlice';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst Loader = lazy(() => import('components/Loader/Loader'));\nconst Filter = lazy(() => import('components/Filter/Filter'));\nconst Modal = lazy(() => import('components/Modal/Modal'));\nconst ContactForm = lazy(() => import('components/ContactForm/ContactForm'));\nconst UpdateContactForm = lazy(() =>\n  import('components/UpdateContactForm/UpdateContactForm')\n);\n\nexport default function ContactList() {\n  const [showModal, setShowModal] = useState(false);\n  const [showChangeContactModal, setShowChangeContactModal] = useState(false);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [id, setId] = useState('');\n  const { data: contacts, isFetching, error } = useGetContactsQuery();\n  const [deleteContact] = useDeleteContactMutation();\n\n  const filter = useSelector(selectFilterValue);\n\n  const visibleContacts = () => {\n    const normalizeFilter = filter.toLocaleLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(normalizeFilter)\n    );\n  };\n\n  return (\n    <Suspense fallback={null}>\n      {error && <Text>Sorry something wrong! :(</Text>}\n      {isFetching ? (\n        <Loader />\n      ) : (\n        <div>\n          <AddButton\n            type=\"button\"\n            onClick={() => setShowModal(prevState => !prevState)}\n          >\n            Add Contact\n          </AddButton>\n          <Filter />\n          <List>\n            {visibleContacts().map(contact => {\n              return (\n                <Item key={contact.id}>\n                  <Text>\n                    {contact.name}: {contact.number}\n                  </Text>\n                  <Button\n                    type=\"button\"\n                    onClick={() => {\n                      deleteContact(contact.id);\n                      Notify.success('Delete contact!', {\n                        timeout: 3000,\n                        distance: '100px',\n                      });\n                    }}\n                  >\n                    Delete\n                  </Button>\n                  <Button\n                    type=\"button\"\n                    onClick={() => {\n                      setShowChangeContactModal(prevState => !prevState);\n                      setName(contact.name);\n                      setNumber(contact.number);\n                      setId(contact.id);\n                    }}\n                  >\n                    Change contact\n                  </Button>\n                </Item>\n              );\n            })}\n          </List>\n        </div>\n      )}\n      {showModal && (\n        <Modal onClose={() => setShowModal(prevState => !prevState)}>\n          <ContactForm\n            onClose={() => setShowModal(prevState => !prevState)}\n            contacts={contacts}\n          />\n        </Modal>\n      )}\n      {showChangeContactModal && (\n        <Modal\n          onClose={() => setShowChangeContactModal(prevState => !prevState)}\n        >\n          <UpdateContactForm\n            onClose={() => setShowChangeContactModal(prevState => !prevState)}\n            name={name}\n            number={number}\n            id={id}\n          />\n        </Modal>\n      )}\n    </Suspense>\n  );\n}\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}"],"names":["List","styled","p","theme","space","Item","fontSizes","s","Text","Button","borders","normal","fontWeights","semiBold","colors","black","white","children","red","yellow","AddButton","green","Loader","lazy","Filter","Modal","ContactForm","UpdateContactForm","ContactList","useState","showModal","setShowModal","showChangeContactModal","setShowChangeContactModal","name","setName","number","setNumber","id","setId","useGetContactsQuery","contacts","data","isFetching","error","useDeleteContactMutation","deleteContact","filter","useSelector","selectFilterValue","Suspense","fallback","type","onClick","prevState","normalizeFilter","toLocaleLowerCase","contact","includes","visibleContacts","map","Notify","timeout","distance","onClose","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value"],"sourceRoot":""}
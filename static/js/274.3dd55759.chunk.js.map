{"version":3,"file":"static/js/274.3dd55759.chunk.js","mappings":"2NAEaA,EAAOC,EAAAA,GAAAA,KAAH,6LAGL,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,QAAQC,GAApB,IACM,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,MAAM,EAAlB,IACD,SAAAJ,GAAC,OAAIA,EAAEC,MAAMG,MAAM,EAAlB,IACT,SAAAJ,GAAC,OAAIA,EAAEC,MAAMG,MAAM,EAAlB,IACC,SAAAJ,GAAC,OAAIA,EAAEC,MAAMG,MAAM,EAAlB,IACQ,SAAAJ,GAAC,OAAIA,EAAEC,MAAMI,OAAOC,KAAnB,IAEVC,EAAQR,EAAAA,GAAAA,MAAH,wFAGH,SAAAC,GAAC,OAAIA,EAAEC,MAAMO,UAAUC,CAAtB,IAEHC,EAAQX,EAAAA,GAAAA,MAAH,6IACP,SAAAC,GAAC,OAAIA,EAAEC,MAAMG,MAAM,EAAlB,IACO,SAAAJ,GAAC,OAAIA,EAAEC,MAAMG,MAAM,EAAlB,IACR,SAAAJ,GAAC,OAAIA,EAAEC,MAAMC,QAAQS,MAApB,IACM,SAAAX,GAAC,OAAIA,EAAEC,MAAMG,MAAM,EAAlB,IACP,SAAAJ,GAAC,OAAIA,EAAEC,MAAMG,MAAM,EAAlB,IAAwB,SAAAJ,GAAC,OAAIA,EAAEC,MAAMG,MAAM,EAAlB,IACxB,SAAAJ,GAAC,OAAIA,EAAEC,MAAMO,UAAUI,CAAtB,IAEHC,EAASd,EAAAA,GAAAA,OAAH,8ZAGR,SAAAC,GAAC,OAAIA,EAAEC,MAAMG,MAAM,EAAlB,IAEK,SAAAJ,GAAC,OAAIA,EAAEC,MAAMG,MAAM,EAAlB,IACN,SAAAJ,GAAC,OAAIA,EAAEC,MAAMC,QAAQC,GAApB,IACM,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,MAAM,EAAlB,IAIA,SAAAJ,GAAC,OAAIA,EAAEC,MAAMG,MAAM,EAAlB,IACJ,SAAAJ,GAAC,OAAIA,EAAEC,MAAMa,YAAYC,QAAxB,IACP,SAAAf,GAAC,OAAIA,EAAEC,MAAMI,OAAOW,KAAnB,IACI,SAAAhB,GAAC,OAAIA,EAAEC,MAAMI,OAAOC,KAAnB,IAKC,SAAAN,GAAC,OAAIA,EAAEC,MAAMI,OAAOY,KAAnB,I,6BCvCJ,SAASC,EAAT,GAA6C,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SAC7C,GAAqBC,EAAAA,EAAAA,MAAdC,GAAP,eA6BA,OACE,UAACxB,EAAD,CAAMyB,aAAa,MAAMC,SA5BL,SAAAC,GACpBA,EAAEC,iBACF,IAAMC,EAAa,CACjBC,KAAMH,EAAEI,OAAOD,KAAKE,MACpBC,OAAQN,EAAEI,OAAOG,MAAMF,OAELV,EAASa,MAAK,SAAAC,GAAO,OACvCA,EAAQN,KACLO,oBACAC,SAAST,EAAWC,KAAKO,oBAHW,IAMvCE,EAAAA,OAAAA,QAAA,UAAkBV,EAAWC,KAA7B,4BAA6D,CAC3DU,QAAS,IACTC,SAAU,WAGZjB,EAAWK,GACXU,EAAAA,OAAAA,QAAe,6BAA8B,CAC3CC,QAAS,IACTC,SAAU,WAGdd,EAAEI,OAAOW,QACTrB,GACD,EAGC,WACE,UAACZ,EAAD,mBAEE,SAACG,EAAD,CACE+B,KAAK,OACLb,KAAK,OACLc,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,UAACrC,EAAD,qBAEE,SAACG,EAAD,CACE+B,KAAK,MACLb,KAAK,QACLc,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,SAAC/B,EAAD,CAAQ4B,KAAK,SAAb,4BAGL,C","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  border: ${p => p.theme.borders.fat};\n  border-radius: ${p => p.theme.space[3]};\n  margin-bottom: ${p => p.theme.space[4]};\n  width: ${p => p.theme.space[9]};\n  padding: ${p => p.theme.space[3]};\n  background-color: ${p => p.theme.colors.white};\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: ${p => p.theme.fontSizes.m};\n`;\nexport const Input = styled.input`\n  width: ${p => p.theme.space[8]};\n  margin-bottom: ${p => p.theme.space[3]};\n  border: ${p => p.theme.borders.normal};\n  border-radius: ${p => p.theme.space[5]};\n  padding: ${p => p.theme.space[2]} ${p => p.theme.space[3]};\n  font-size: ${p => p.theme.fontSizes.s};\n`;\nexport const Button = styled.button`\n  text-decoration: none;\n  display: inline-block;\n  width: ${p => p.theme.space[7]};\n  height: 40px;\n  line-height: ${p => p.theme.space[4]};\n  border: ${p => p.theme.borders.fat};\n  border-radius: ${p => p.theme.space[5]};\n  font-size: 11px;\n  text-transform: uppercase;\n  text-align: center;\n  letter-spacing: ${p => p.theme.space[2]};\n  font-weight: ${p => p.theme.fontWeights.semiBold};\n  color: ${p => p.theme.colors.black};\n  background: ${p => p.theme.colors.white};\n  transition: 0.3s;\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    background: ${p => p.theme.colors.green};\n  }\n`;\n","import { Form, Label, Input, Button } from './ContactForm.styled';\nimport { useAddContactMutation } from 'redux/contactsSlice';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport PropTypes from 'prop-types';\n\nexport default function ContactForm({ onClose, contacts }) {\n  const [addContact] = useAddContactMutation();\n\n  const handlerSubmit = e => {\n    e.preventDefault();\n    const newContact = {\n      name: e.target.name.value,\n      number: e.target.phone.value,\n    };\n    const findContact = contacts.find(contact =>\n      contact.name\n        .toLocaleLowerCase()\n        .includes(newContact.name.toLocaleLowerCase())\n    );\n    if (findContact) {\n      Notify.failure(`${newContact.name} is already in contacts.`, {\n        timeout: 3000,\n        distance: '100px',\n      });\n    } else {\n      addContact(newContact);\n      Notify.success('Add a new contact success!', {\n        timeout: 3000,\n        distance: '100px',\n      });\n    }\n    e.target.reset();\n    onClose();\n  };\n\n  return (\n    <Form autoComplete=\"off\" onSubmit={handlerSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"phone\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Save contact</Button>\n    </Form>\n  );\n}\n\nContactForm.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  contacts: PropTypes.array.isRequired,\n};\n"],"names":["Form","styled","p","theme","borders","fat","space","colors","white","Label","fontSizes","m","Input","normal","s","Button","fontWeights","semiBold","black","green","ContactForm","onClose","contacts","useAddContactMutation","addContact","autoComplete","onSubmit","e","preventDefault","newContact","name","target","value","number","phone","find","contact","toLocaleLowerCase","includes","Notify","timeout","distance","reset","type","pattern","title","required"],"sourceRoot":""}